server:
  port: 9001
  tomcat:
    # 클라이언트에서 TCP연결을 수락하고 실제 HTTP요청을 받기따지 Tomcat이 기다리는 시간. 서비스 거부 공격(denial-of-service attack, Dos Attack)을 방지.
    connection-timeout: 2s
    # 새로운 HTTP요청을 기다리는 동안 연결을 유지하는 시간
    keep-alive-timeout: 15s
    # Tomcat은 요청당 스레드 모델에 따라 요청을 처리하는 Thread Pool을 가지고 있으며 사용 가능한 Thread수에 따라 최대로 동시에 처리할 수 있는 요청의 수가 결정됨.
    threads:
      max: 50       # 최대 요청 처리 Thread 수
      min-spare: 5  # Thread Pool에 항상 유지해야하는 최소의 스레드 수

spring:
  application:
    name: catalog-service
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000 # 설정 서버에 연결될때 까지 대기 시간(ms)
      request-read-timeout: 5000    # 설정 서버에서 설정데이터를 읽을 때까지 대기 시간(ms)
      fail-fast: ture               # 설정 서버 연결 실패를 치명적 오류로 인식
      retry:
        max-attempts: 6             # 재시도 최대 횟수
        initial-interval: 1000      # 최초 재시도 지연 시간(ms)
        max-interval: 2000          # 재시도 지연 최대 시간(ms)
        multiplier: 1.1             # 지연 시간 계산 승수

management:
  endpoints:
    web:
      exposure:
        include: refresh # HTTP를 통해 /actuator/refresh 엔드 포인트를 노출

polar:
  greeting: Welcome to the local book catalog!